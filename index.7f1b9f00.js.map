{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAMQ,EANF,EAAS,SAAS,aAAa,CAAC,MAM9B,EAAc,EAAG,AAJhB,EAIqB,QAAQ,EAAE,IAAI,CAAC,SAAC,CAAA,CAAS,CAArD,EACE,OACE,EAAQ,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAS,IACxC,EAAQ,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAS,GAE5C,GAEA,AAXO,EAWF,SAAS,CAAG,GAEjB,EAAW,OAAO,CAAC,SAAC,CAApB,EACE,AAdK,EAcA,MAAM,CAAC,EACd,GAdF,AAiBA,SAAsB,CAAI,EAChB,EAAG,EAAK,QAAQ,EAAE,GAAG,CAAC,SAAC,CAA/B,EACE,IAAM,EAAW,EAAI,OAAO,CAAC,QAAQ,CAC/B,EAAS,EAAI,OAAO,CAAC,MAAM,CAC3B,EAAM,EAAI,OAAO,CAAC,GAAG,CAG3B,MAAO,CACL,KAHiB,EAAI,WAAW,CAAC,IAAI,GAIrC,SAAA,EACA,OAAA,EACA,IAAA,CACF,CACF,EACF,EA/Ba","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar people = document.querySelector(\"ul\");\nsortList(people);\ngetEmployees(people);\nfunction sortList(list) {\n    var sortedList = _to_consumable_array(list.children).sort(function(person1, person2) {\n        return person2.dataset.salary.replace(/[$,]/g, \"\") - person1.dataset.salary.replace(/[$,]/g, \"\");\n    });\n    list.innerHTML = \"\";\n    sortedList.forEach(function(val) {\n        list.append(val);\n    });\n}\nfunction getEmployees(list) {\n    return _to_consumable_array(list.children).map(function(val) {\n        var position = val.dataset.position;\n        var salary = val.dataset.salary;\n        var age = val.dataset.age;\n        var personName = val.textContent.trim();\n        return {\n            name: personName,\n            position: position,\n            salary: salary,\n            age: age\n        };\n    });\n}\n\n//# sourceMappingURL=index.7f1b9f00.js.map\n","'use strict';\n\nconst people = document.querySelector('ul');\n\nsortList(people);\ngetEmployees(people);\n\nfunction sortList(list) {\n  const sortedList = [...list.children].sort((person1, person2) => {\n    return (\n      person2.dataset.salary.replace(/[$,]/g, '') -\n      person1.dataset.salary.replace(/[$,]/g, '')\n    );\n  });\n\n  list.innerHTML = '';\n\n  sortedList.forEach((val) => {\n    list.append(val);\n  });\n}\n\nfunction getEmployees(list) {\n  return [...list.children].map((val) => {\n    const position = val.dataset.position;\n    const salary = val.dataset.salary;\n    const age = val.dataset.age;\n    const personName = val.textContent.trim();\n\n    return {\n      name: personName,\n      position,\n      salary,\n      age,\n    };\n  });\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sortedList","people","document","querySelector","list","children","sort","person1","person2","dataset","salary","replace","innerHTML","forEach","val","append","getEmployees","map","position","age","textContent","trim"],"version":3,"file":"index.7f1b9f00.js.map"}